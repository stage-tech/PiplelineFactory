"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("@aws-cdk/core");
const sqs = require("@aws-cdk/aws-sqs");
const lambda = require("@aws-cdk/aws-lambda");
const s3 = require("@aws-cdk/aws-s3");
const iam = require("@aws-cdk/aws-iam");
class Monitor extends cdk.Construct {
    constructor(scope, id, props) {
        super(scope, id);
        const queue = new sqs.Queue(this, "repository_discovery_jobs", {
            queueName: `repository_discovery_jobs`,
        });
        const sourceCodeBucket = s3.Bucket.fromBucketAttributes(this, `PackageBucket`, {
            bucketName: props.triggerCodeS3Bucket,
        });
        const lambdaCode = lambda.Code.fromBucket(sourceCodeBucket, props.triggerCodeS3Key);
        const environmentVariables = {
            SQS_QUEUE_URL: queue.queueUrl,
            GITHUB_TOKEN_SECRET_NAME: props.default_github_token_secret_name
        };
        const lambdaRole = new iam.Role(this, "Role_LambdaFunction", {
            roleName: `PLF-${props.projectName}-Repository-Monitor`,
            assumedBy: new iam.ServicePrincipal("lambda.amazonaws.com"),
        });
        lambdaRole.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName("service-role/AWSLambdaBasicExecutionRole"));
        new lambda.Function(this, "Lambda_Repository_Monitor", {
            runtime: lambda.Runtime.NODEJS_10_X,
            functionName: `${props.projectName}-Repository-Monitor`,
            handler: "dist/monitor-repositories-handler.handler",
            role: lambdaRole,
            code: lambdaCode,
            environment: environmentVariables,
            timeout: cdk.Duration.seconds(10),
        });
    }
}
exports.Monitor = Monitor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uaXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1vbml0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBcUM7QUFDckMsd0NBQXdDO0FBQ3hDLDhDQUE4QztBQUM5QyxzQ0FBc0M7QUFDdEMsd0NBQXdDO0FBR3hDLE1BQWEsT0FBUSxTQUFRLEdBQUcsQ0FBQyxTQUFTO0lBRXhDLFlBQ0UsS0FBb0IsRUFDcEIsRUFBVSxFQUNWLEtBQWlDO1FBRWpDLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakIsTUFBTSxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSwyQkFBMkIsRUFBRTtZQUM3RCxTQUFTLEVBQUUsMkJBQTJCO1NBQ3ZDLENBQUMsQ0FBQztRQUVILE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FDckQsSUFBSSxFQUNKLGVBQWUsRUFDZjtZQUNFLFVBQVUsRUFBRSxLQUFLLENBQUMsbUJBQW1CO1NBQ3RDLENBQ0YsQ0FBQztRQUVGLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUN2QyxnQkFBZ0IsRUFDaEIsS0FBSyxDQUFDLGdCQUFnQixDQUN2QixDQUFDO1FBRUYsTUFBTSxvQkFBb0IsR0FBOEI7WUFDdEQsYUFBYSxFQUFFLEtBQUssQ0FBQyxRQUFRO1lBQzdCLHdCQUF3QixFQUFHLEtBQUssQ0FBQyxnQ0FBZ0M7U0FDbEUsQ0FBQztRQUVGLE1BQU0sVUFBVSxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUscUJBQXFCLEVBQUU7WUFDM0QsUUFBUSxFQUFFLE9BQU8sS0FBSyxDQUFDLFdBQVcscUJBQXFCO1lBQ3ZELFNBQVMsRUFBRSxJQUFJLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxzQkFBc0IsQ0FBQztTQUM1RCxDQUFDLENBQUM7UUFFSCxVQUFVLENBQUMsZ0JBQWdCLENBQUUsR0FBRyxDQUFDLGFBQWEsQ0FBQyx3QkFBd0IsQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDLENBQUE7UUFHcEgsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSwyQkFBMkIsRUFBRTtZQUNyRCxPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXO1lBQ25DLFlBQVksRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLHFCQUFxQjtZQUN2RCxPQUFPLEVBQUUsMkNBQTJDO1lBQ3BELElBQUksRUFBRSxVQUFVO1lBQ2hCLElBQUksRUFBRSxVQUFVO1lBQ2hCLFdBQVcsRUFBRSxvQkFBb0I7WUFDakMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztTQUNsQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFoREQsMEJBZ0RDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY2RrIGZyb20gXCJAYXdzLWNkay9jb3JlXCI7XHJcbmltcG9ydCAqIGFzIHNxcyBmcm9tIFwiQGF3cy1jZGsvYXdzLXNxc1wiO1xyXG5pbXBvcnQgKiBhcyBsYW1iZGEgZnJvbSBcIkBhd3MtY2RrL2F3cy1sYW1iZGFcIjtcclxuaW1wb3J0ICogYXMgczMgZnJvbSBcIkBhd3MtY2RrL2F3cy1zM1wiO1xyXG5pbXBvcnQgKiBhcyBpYW0gZnJvbSBcIkBhd3MtY2RrL2F3cy1pYW1cIjtcclxuaW1wb3J0IFRyaWdnZXJpbmdMYW1iZGFQcm9wZXJ0aWVzIGZyb20gXCIuLi90cmlnZ2VyaW5nTGFtYmRhUHJvcGVydGllc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1vbml0b3IgZXh0ZW5kcyBjZGsuQ29uc3RydWN0IHtcclxuICBwdWJsaWMgcmVhZG9ubHkgYnVpbGRQcm9qZWN0QXJuOiBzdHJpbmc7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBzY29wZTogY2RrLkNvbnN0cnVjdCxcclxuICAgIGlkOiBzdHJpbmcsXHJcbiAgICBwcm9wczogVHJpZ2dlcmluZ0xhbWJkYVByb3BlcnRpZXNcclxuICApIHtcclxuICAgIHN1cGVyKHNjb3BlLCBpZCk7XHJcbiAgICBjb25zdCBxdWV1ZSA9IG5ldyBzcXMuUXVldWUodGhpcywgXCJyZXBvc2l0b3J5X2Rpc2NvdmVyeV9qb2JzXCIsIHtcclxuICAgICAgcXVldWVOYW1lOiBgcmVwb3NpdG9yeV9kaXNjb3Zlcnlfam9ic2AsXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBzb3VyY2VDb2RlQnVja2V0ID0gczMuQnVja2V0LmZyb21CdWNrZXRBdHRyaWJ1dGVzKFxyXG4gICAgICB0aGlzLFxyXG4gICAgICBgUGFja2FnZUJ1Y2tldGAsXHJcbiAgICAgIHtcclxuICAgICAgICBidWNrZXROYW1lOiBwcm9wcy50cmlnZ2VyQ29kZVMzQnVja2V0LFxyXG4gICAgICB9XHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGxhbWJkYUNvZGUgPSBsYW1iZGEuQ29kZS5mcm9tQnVja2V0KFxyXG4gICAgICBzb3VyY2VDb2RlQnVja2V0LFxyXG4gICAgICBwcm9wcy50cmlnZ2VyQ29kZVMzS2V5XHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGVudmlyb25tZW50VmFyaWFibGVzOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge1xyXG4gICAgICBTUVNfUVVFVUVfVVJMOiBxdWV1ZS5xdWV1ZVVybCxcclxuICAgICAgR0lUSFVCX1RPS0VOX1NFQ1JFVF9OQU1FIDogcHJvcHMuZGVmYXVsdF9naXRodWJfdG9rZW5fc2VjcmV0X25hbWVcclxuICAgIH07XHJcblxyXG4gICAgY29uc3QgbGFtYmRhUm9sZSA9IG5ldyBpYW0uUm9sZSh0aGlzLCBcIlJvbGVfTGFtYmRhRnVuY3Rpb25cIiwge1xyXG4gICAgICByb2xlTmFtZTogYFBMRi0ke3Byb3BzLnByb2plY3ROYW1lfS1SZXBvc2l0b3J5LU1vbml0b3JgLFxyXG4gICAgICBhc3N1bWVkQnk6IG5ldyBpYW0uU2VydmljZVByaW5jaXBhbChcImxhbWJkYS5hbWF6b25hd3MuY29tXCIpLFxyXG4gICAgfSk7XHJcblxyXG4gICAgbGFtYmRhUm9sZS5hZGRNYW5hZ2VkUG9saWN5KCBpYW0uTWFuYWdlZFBvbGljeS5mcm9tQXdzTWFuYWdlZFBvbGljeU5hbWUoXCJzZXJ2aWNlLXJvbGUvQVdTTGFtYmRhQmFzaWNFeGVjdXRpb25Sb2xlXCIpKVxyXG4gICAgXHJcblxyXG4gICAgbmV3IGxhbWJkYS5GdW5jdGlvbih0aGlzLCBcIkxhbWJkYV9SZXBvc2l0b3J5X01vbml0b3JcIiwge1xyXG4gICAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5OT0RFSlNfMTBfWCxcclxuICAgICAgZnVuY3Rpb25OYW1lOiBgJHtwcm9wcy5wcm9qZWN0TmFtZX0tUmVwb3NpdG9yeS1Nb25pdG9yYCxcclxuICAgICAgaGFuZGxlcjogXCJkaXN0L21vbml0b3ItcmVwb3NpdG9yaWVzLWhhbmRsZXIuaGFuZGxlclwiLFxyXG4gICAgICByb2xlOiBsYW1iZGFSb2xlLFxyXG4gICAgICBjb2RlOiBsYW1iZGFDb2RlLFxyXG4gICAgICBlbnZpcm9ubWVudDogZW52aXJvbm1lbnRWYXJpYWJsZXMsXHJcbiAgICAgIHRpbWVvdXQ6IGNkay5EdXJhdGlvbi5zZWNvbmRzKDEwKSxcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=